/**
 * BioLink API
 * API integration layer for linked biological objects.   __Source:__ https://github.com/monarch-initiative/biolink-api/
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.APageOfResults;
import io.swagger.client.model.VariantSet;
import java.util.ArrayList;
import java.util.List;


/**
 * PageOfVariantSets
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-07T20:15:06.627-08:00")
public class PageOfVariantSets   {
  @SerializedName("per_page")
  private Integer perPage = null;

  @SerializedName("total")
  private Integer total = null;

  @SerializedName("page")
  private Integer page = null;

  @SerializedName("pages")
  private Integer pages = null;

  @SerializedName("items")
  private List<VariantSet> items = new ArrayList<VariantSet>();

  public PageOfVariantSets perPage(Integer perPage) {
    this.perPage = perPage;
    return this;
  }

   /**
   * Number of items per page of results
   * @return perPage
  **/
  @ApiModelProperty(example = "null", value = "Number of items per page of results")
  public Integer getPerPage() {
    return perPage;
  }

  public void setPerPage(Integer perPage) {
    this.perPage = perPage;
  }

  public PageOfVariantSets total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * Total number of results
   * @return total
  **/
  @ApiModelProperty(example = "null", value = "Total number of results")
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }

  public PageOfVariantSets page(Integer page) {
    this.page = page;
    return this;
  }

   /**
   * Number of this page of results
   * @return page
  **/
  @ApiModelProperty(example = "null", value = "Number of this page of results")
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }

  public PageOfVariantSets pages(Integer pages) {
    this.pages = pages;
    return this;
  }

   /**
   * Total number of pages of results
   * @return pages
  **/
  @ApiModelProperty(example = "null", value = "Total number of pages of results")
  public Integer getPages() {
    return pages;
  }

  public void setPages(Integer pages) {
    this.pages = pages;
  }

  public PageOfVariantSets items(List<VariantSet> items) {
    this.items = items;
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<VariantSet> getItems() {
    return items;
  }

  public void setItems(List<VariantSet> items) {
    this.items = items;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PageOfVariantSets pageOfVariantSets = (PageOfVariantSets) o;
    return Objects.equals(this.perPage, pageOfVariantSets.perPage) &&
        Objects.equals(this.total, pageOfVariantSets.total) &&
        Objects.equals(this.page, pageOfVariantSets.page) &&
        Objects.equals(this.pages, pageOfVariantSets.pages) &&
        Objects.equals(this.items, pageOfVariantSets.items);
  }

  @Override
  public int hashCode() {
    return Objects.hash(perPage, total, page, pages, items);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PageOfVariantSets {\n");
    
    sb.append("    perPage: ").append(toIndentedString(perPage)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    pages: ").append(toIndentedString(pages)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

